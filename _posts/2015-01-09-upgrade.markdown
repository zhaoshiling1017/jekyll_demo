---
layout: default
title: 外呼营销平台升级备注
---

### 运营产品升级备注
---

####运营端

1. 创建代理商表结构，sql代码如下：

{% highlight ruby %}
DROP TABLE IF EXISTS t_agent; 
CREATE TABLE t_agent
(
id numeric(20) primary key,
acc_password varchar(64),
account varchar(64),
address varchar(255),
balance varchar(32),
contacts varchar(32),
created_at timestamp,
creator_id numeric(20),
email varchar(64),
if_use int,
name varchar(64),
operator_id numeric(20),
overdraw_balance varchar(32),
phone varchar(32),
status varchar(32),
updated_at timestamp,
uuid varchar(255),
audit_reason varchar(1000),
audited_at timestamp,
auditor numeric(20),
submitted_at timestamp,
is_lock int,
agent_code varchar(255),
city_id numeric(20),
province_id numeric(20),
min_rate_price varchar(32),
parent_agent_id numeric(20),
rented_at varchar(32)
);
{% endhighlight %}
2. 创建代理商分配角色表结构，sql语句如下：
```
DROP TABLE if EXISTS t_agent_assign_role;
CREATE TABLE t_agent_assign_role
(
  id numeric(20) primary key,
  agent_id numeric(20),
  role_id numeric(20)
);
```

3. 创建代理商充值跟踪记录表结构，sql语句如下：
```
DROP TABLE if EXISTS t_agent_pay_record;
CREATE TABLE t_agent_pay_record
(
  id numeric(20) primary key,
  agent_id numeric(20),
  created_at timestamp,
  creator_id numeric(20),
  recharge_amount varchar(32),
  recharge_type varchar(32),
  remark varchar(1000),
  result varchar(32),
  charge_type varchar(32)
);
```

4.  创建代理商费率表结构，sql语句如下：
```
DROP TABLE if EXISTS t_agent_rate;
CREATE TABLE t_agent_rate
(
  id numeric(20) primary key,
  agent_id numeric(20),
  foreign_mobile varchar(32),
  foreign_mobile_common_num varchar(32),
  foreign_mobile_privilege_num varchar(32),
  foreign_mobile_privilege_price varchar(32),
  foreign_phone varchar(32),
  foreign_phone_common_num varchar(32),
  foreign_phone_privilege_num varchar(32),
  foreign_phone_privilege_price varchar(32),
  local_mobile varchar(32),
  local_mobile_common_num varchar(32),
  local_mobile_privilege_num varchar(32),
  local_mobile_privilege_price varchar(32),
  local_phone varchar(32),
  local_phone_common_num varchar(32),
  local_phone_privilege_num varchar(32),
  local_phone_privilege_price varchar(32),
  operated_at timestamp,
  operator_id numeric(20),
  over_draft varchar(32),
  period int,
  rent varchar(32),
  rate_type varchar(32),
  mobile_privilege_num varchar(64),
  mobile_privilege_price varchar(64),
  mobile_common_num varchar(64),
  mobile_common_price varchar(64),
  unicom_privilege_num varchar(64),
  unicom_privilege_price varchar(64),
  unicom_common_num varchar(64),
  unicom_common_price varchar(64),
  telecom_privilege_num varchar(64),
  telecom_privilege_price varchar(64),
  telecom_common_num varchar(64),
  telecom_common_price varchar(64),
  other_privilege_num varchar(64),
  other_privilege_price varchar(64),
  other_common_num varchar(64),
  other_common_price varchar(64)
);
```

5. 创建代理商费率变化日志表结构，sql语句如下：
```
DROP TABLE if EXISTS t_agent_rate_change_log;
CREATE TABLE t_agent_rate_change_log
(
  id numeric(20) primary key,
  after_rate varchar(1000),
  agent_id numeric(20),
  before_rate varchar(1000),
  operated_at timestamp,
  operator_id numeric(20)
);
```

6. 创建代理商角色表结构，sql语句如下：
```
DROP TABLE if EXISTS t_agent_role;
CREATE TABLE t_agent_role
(
  id numeric(20) primary key,
  agent_id numeric(20),
  role_id numeric(20)
);
```
7. 更新账户表结构
    * 增加代理商关联，sql语句如下：
        ```
        ALTER TABLE T_ACCOUNT ADD COLUMN agent_id numeric(20);
        ALTER TABLE T_ACCOUNT ADD COLUMN sort varchar(64);
        ```
    * 账户增加押金、生效日期、测试周期，sql语句如下：
        ```
        ALTER TABLE T_ACCOUNT ADD COLUMN deposit varchar(32);
        ALTER TABLE T_ACCOUNT ADD COLUMN effective_date timestamp;
        ALTER TABLE T_ACCOUNT ADD COLUMN test_period numeric(5);
        ALTER TABLE T_ACCOUNT ADD COLUMN device_num numeric(5);
        ALTER TABLE T_ACCOUNT ADD COLUMN if_release numeric(2);
        ALTER TABLE T_ACCOUNT ADD COLUMN audit_result varchar(64);
        ALTER TABLE T_ACCOUNT ADD COLUMN audit_note varchar(255);
        ALTER TABLE T_ACCOUNT ADD COLUMN rent_at varchar(32);
        ALTER TABLE T_ACCOUNT ADD COLUMN regist_type varchar(32);
        ```

8. 增加账户审核的表信息，sql语句如下：
```
drop table if exists t_account_info;
create table t_account_info(
 id numeric(20) not null primary key,
 account_id numeric(20),
 begin_at varchar(64),
 end_at varchar(64),
 concurrent_num numeric(5),
 max_group_num numeric(5),
 max_user_num numeric(5),
 max_factor numeric(5),
 test_period numeric(5),
 device_num numeric(5),
 phone_nos varchar(4000),
 note varchar(255),
 operate_at timestamp,
 operator_id varchar(32),
 created_at timestamp,
 account_type varchar(32),
 agent_id numeric(20),
 if_use numeric(2),
 status varchar(32),
 access_no varchar(32)
 );
```

9. 更新分机表结构，sql语句如下：
```
alter table t_device add agent_id numeric(20);
update t_device set agent_id=0;
```
10. 更新线路表结构，sql语句如下：
```
alter table t_line add account_id varchar(32);
```

11. 更新电话表结构，sql语句如下：
```
alter table t_phone add agent_id numeric(20);
alter table t_phone add account_id numeric(20);
update t_phone set agent_id=0;
alter table t_phone add phone_type varchar(32);
```

12. 更新计费话单表结构，sql语句如下：
```
alter table t_record_fee add agent_id varchar(32);
alter table t_record_fee add agent_cost numeric(20);
alter table t_record_fee add parent_agent_cost numeric(20);
alter table t_record_fee add parent_agent_id varchar(32);
UPDATE t_record_fee SET agent_cost = 0 WHERE agent_cost is null;
UPDATE t_record_fee SET parent_agent_cost = 0 WHERE parent_agent_cost is null;
```
13. 增加账户审核日志表结构，sql语句如下：
```
drop table if exists t_account_log;
create table t_account_log(
 id numeric(20) not null primary key,
 account_id varchar(32),
 agent_id varchar(32),
 operator_id varchar(32),
 created_at timestamp,
 note varchar(500),
 audit_result varchar(16),
 before_status varchar(16),
 current_status varchar(16),
 phone_nos varchar(500),
 before_params varchar(2000),
 after_params varchar(2000),
 audit_note varchar(500)
);
```

14. 更新用户表结构，sql语句如下：
```
ALTER TABLE t_user ADD COLUMN agent_id numeric(20);
ALTER TABLE t_user ADD COLUMN creator_id numeric(20);
```

15. 更新账户消费报表结构，sql语句如下：
```
ALTER TABLE T_FEE_REPORT ADD COLUMN total_cost numeric(20);
ALTER TABLE T_FEE_REPORT ADD COLUMN agent_id numeric(20);
UPDATE t_fee_report SET total_cost = 0 WHERE total_cost is null;
```

16. 增加代理商计费报表表结构，sql语句如下：
```
DROP TABLE IF EXISTS t_agent_fee_report; 
CREATE TABLE t_agent_fee_report
(
  id numeric(20) primary key,
  agent_id numeric(20),
  created_at timestamp,
  duration numeric(20),
  fee_duration numeric(20),
  parent_agent_id numeric(20),
  span_id varchar(32),
  span_name varchar(32),
  span_type varchar(32),
  total_cost numeric(20),
  total_fees numeric(20)
);
```

17. 重新执行账户计费报表/代理商计费报表数据库存储过程，文件为:
    proc_fee_report_function.sql和proc_agent_fee_report_function.sql

18. 配置文件`application.conf`配置变动如下：
    * 增加代理商计费地址，代码如下：
    ```
    acc.agent.new=/new_agent
    acc.agent.update=/update_rate
    acc.agent.charge=/charge
    acc.agent.change=/change_agent
    ```
    * 增加扣费接口地址，代码如下：
    ```
    acc.rent.pay=/pay
    ```
19. 更新运营端cc_record_fee表结构，sql语句如下：
```
ALTER TABLE cc_record_fee ADD COLUMN fee_duration numeric(20);
ALTER TABLE cc_record_fee ADD COLUMN agent_id varchar(32);
ALTER TABLE cc_record_fee ADD COLUMN agent_cost numeric(20);
ALTER TABLE cc_record_fee ADD COLUMN parent_agent_cost numeric(20);
ALTER TABLE cc_record_fee ADD COLUMN parent_agent_id varchar(32);
```

20. 更新运营端cc_fee_report表结构，sql语句如下：
```
ALTER TABLE cc_fee_report ADD COLUMN fee_duration numeric(20);
```


####企业端

1. 更新计费报表表结构，sql语句如下：
```
alter table cc_record_fee add agent_id varchar(32); 
alter table cc_record_fee add agent_cost numeric(20);
alter table cc_record_fee add parent_agent_cost numeric(20);
alter table cc_record_fee add parent_agent_id varchar(32);
UPDATE cc_record_fee SET agent_cost = 0 WHERE agent_cost is null;
UPDATE cc_record_fee SET parent_agent_cost = 0 WHERE parent_agent_cost is null;
```

2. 更新电话表结构，sql语句如下：
```
ALTER TABLE cc_phone ADD COLUMN if_use numeric(2);
UPDATE cc_phone SET if_use = 1 WHERE if_use is null;
```


3. 配置文件`application.conf`配置变动如下：
    * 增加```dic.delPhone = select '${emCode}_delPhone' as T,id as K,phone_no as V from cc_phone where if_use=0;```
    
